name: Django CI

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.10.9]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set up PostgreSQL
      uses: actions/setup-postgres@v2
      with:
        postgres-version: 13
        postgres-database: Backend
        postgres-username: database
        postgres-password: 1234
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true          
          #----------------------------------------------
          #       load cached venv if cache exists
          #----------------------------------------------
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
            #----------------------------------------------
            #       install dependencies if cache miss
            #----------------------------------------------
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: |
        cd app
        poetry install --no-interaction --no-root
    - name: Prepare project
      run: |
        cd app
        poetry install --no-interaction
    - name: Run tests
      run: |
        cd app
        PYTHONPATH=src/ poetry run python manage.py migrate
        PYTHONPATH=src/ poetry run python manage.py test